import numpy as np
import h5py
import sys

#dir = 'C:/Users/smrTu/OneDrive/Documents/Workspace/Projects/CDIF-Dagstuhl/cdif/XrayAbsorbtion/'
# dir = "C:/Users/smrTu/OneDrive/Documents/GithubC/CDIF/exampledata/"
# C:\Users\smrTu\OneDrive\Documents\GithubC\CDIF\exampledata\DLS\p45\hdf5\p45-2194.nxs
#dir = "C:/Users/smrTu/OneDrive/Documents/GithubC/CDIF/exampledata/"
#dir = "G:/My Drive/Astromat/Example data/10.60707srdv-7b95/"
# filename = "20231127_uL2MS_JSC-ARES_OREX-501006-0_1_L2MSCube_11.h5"
#filename = 'FeXAS.nxs'
# filename = "Soleil/hdf5/file_2.nxs"
# filename = "DLS/p45/hdf5/p45-2194.nxs"
# filename = 'Therm_6_2.nxs'
# filename = 'PID.SAMPLE.PREFIX683cae10-2de9-4cbf-895a-5c09eff530ba_metadata.hdf5'
#filename = 'IPNS/LRMECS/hdf5/lrcs3701.nx5'
#filename = 'autogenerated_examples/nxdl/applications/NXxas.hdf5'
#filename = 'Soleil/hdf5/file_1.nxs'

dir = "G:/My Drive/Astromat/Example data/STEMEDSCube-emd-10.60707-emjy-za09/"
filename = "20240711_TEM_UAZ_OREX-501044-104_1_STEMEDSCube_00002.emd"


hdf = h5py.File(dir+filename,'r')
#with open(dir+'therm62.txt', 'w', encoding='utf-8') as f_out:
#    sys.stdout = f_out

def print_structure(name, obj):
    if isinstance(obj, h5py.Dataset):
        print(f"{name} (Dataset); ")
        print(f"    shape: {obj.shape}, dims: {obj.ndim}; dtype: {obj.dtype}")
        if obj.ndim == 0:
            val = obj[()]
            if isinstance(val, bytes):
                try:
                    val = val.decode('utf-8')
                    print(f"    Data value: {val}")
                except:
                    print(f'    !!Data value char encoding problem {val}')
            else:
                print(f"    Data value[0]: {val}")
        if obj.ndim == 1 and obj.shape[0] == 1:
            val = obj[()][0]
            if isinstance(val, bytes):
                try:
                    val = val.decode('utf-8')
                    print(f"    Data value[0]: {val}")
                except:
                    print(f'    !!Data value char encoding problem {val}')
            else:
                print(f"    Data value[0]: {val}")

    elif isinstance(obj, h5py.Group):
        print(f"{name}/ (Group)")

    if len(obj.attrs.keys())>0:
        print('    attributes: ')
        for key in obj.attrs.keys():
            val = obj.attrs[key]
            if isinstance(val, bytes):
                try:
                    val = val.decode('utf-8')
                    print(f"      {key}: {val}")
                except:
                    print(f'      {key}:char encoding problem {val}')
            else:
                print(f"      {key}: {val}")


#print(hdf.keys())
#print(hdf.items())
#print(hdf['entry/instrument/detector/detector_distance'].shape[0])

hdf.visititems(print_structure)

# Restore stdout (optional)
#sys.stdout = sys.__stdout__

hdf.close()